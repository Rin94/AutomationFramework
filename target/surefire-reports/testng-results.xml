<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-06T22:12:44 CDT" name="All Test Suite" finished-at="2024-07-06T22:15:55 CDT" duration-ms="190981">
    <groups>
      <group name="Purchase">
        <method signature="SumbitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" name="submitOrder" class="Orders.SumbitOrderTest"/>
      </group> <!-- Purchase -->
      <group name="smoke-test">
        <method signature="ErrorValidationsTest.getLoginErrorMessage()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" name="getLoginErrorMessage" class="Login.ErrorValidationsTest"/>
      </group> <!-- smoke-test -->
    </groups>
    <test started-at="2024-07-06T22:12:44 CDT" name="LoginTest" finished-at="2024-07-06T22:15:37 CDT" duration-ms="172595">
      <class name="Login.ErrorValidationsTest">
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:12:44 CDT" name="lauchApplication" finished-at="2024-07-06T22:13:04 CDT" duration-ms="19479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method retried="true" signature="getLoginErrorMessage()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:13:04 CDT" name="getLoginErrorMessage" finished-at="2024-07-06T22:14:15 CDT" duration-ms="71084" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[contains(@class,'toast-error')]' (tried for 5 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[contains(@class,'toast-error')]' (tried for 5 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at BasePage.BasePage.waitUntilElementIsDisplayed(BasePage.java:55)
at BasePage.BasePage.getElementText(BasePage.java:44)
at webstore.pages.LandingPage.getErrorMessage(LandingPage.java:40)
at Login.ErrorValidationsTest.getLoginErrorMessage(ErrorValidationsTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(@class,'toast-error')]"}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.4', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [88a4d42e056bbb35f1498b6bcb425ac4, findElement {value=//*[contains(@class,'toast-error')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: /var/folders/wm/kc35rbg56t3...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59226}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:59226/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 88a4d42e056bbb35f1498b6bcb425ac4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLoginErrorMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:14:15 CDT" name="tearDown" finished-at="2024-07-06T22:14:16 CDT" duration-ms="1195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:14:16 CDT" name="lauchApplication" finished-at="2024-07-06T22:14:34 CDT" duration-ms="18118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="getLoginErrorMessage()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:14:34 CDT" name="getLoginErrorMessage" finished-at="2024-07-06T22:14:39 CDT" duration-ms="5025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLoginErrorMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:14:39 CDT" name="tearDown" finished-at="2024-07-06T22:14:40 CDT" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:14:40 CDT" name="lauchApplication" finished-at="2024-07-06T22:14:58 CDT" duration-ms="17388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="verifyProductName()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:14:58 CDT" name="verifyProductName" finished-at="2024-07-06T22:15:35 CDT" duration-ms="37729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Login.ErrorValidationsTest@fba92d3]" started-at="2024-07-06T22:15:35 CDT" name="tearDown" finished-at="2024-07-06T22:15:37 CDT" duration-ms="1206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Login.ErrorValidationsTest -->
    </test> <!-- LoginTest -->
    <test started-at="2024-07-06T22:12:44 CDT" name="Submit Order Test" finished-at="2024-07-06T22:15:55 CDT" duration-ms="190981">
      <class name="Orders.SumbitOrderTest">
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:12:44 CDT" name="lauchApplication" finished-at="2024-07-06T22:13:07 CDT" duration-ms="22911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:13:07 CDT" name="submitOrder" data-provider="getData" finished-at="2024-07-06T22:13:59 CDT" duration-ms="51421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=Belgium, password=Admin@12345, product=ZARA COAT 3, email=jared12345@gmail.com, orderConfirmation=THANKYOU FOR THE ORDER.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:13:59 CDT" name="tearDown" finished-at="2024-07-06T22:14:00 CDT" duration-ms="1306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:14:00 CDT" name="lauchApplication" finished-at="2024-07-06T22:14:15 CDT" duration-ms="15209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:14:15 CDT" name="submitOrder" data-provider="getData" finished-at="2024-07-06T22:15:19 CDT" duration-ms="63388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=Japan, password=Admin@12345, product=IPHONE 13 PRO, email=jared12345@gmail.com, orderConfirmation=THANKYOU FOR THE ORDER.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:15:19 CDT" name="tearDown" finished-at="2024-07-06T22:15:20 CDT" duration-ms="1274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:15:20 CDT" name="lauchApplication" finished-at="2024-07-06T22:15:36 CDT" duration-ms="16401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="orderHistoryTest()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:15:36 CDT" name="orderHistoryTest" finished-at="2024-07-06T22:15:54 CDT" depends-on-methods="Orders.SumbitOrderTest.submitOrder" duration-ms="17448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Orders.SumbitOrderTest@4c1909a3]" started-at="2024-07-06T22:15:54 CDT" name="tearDown" finished-at="2024-07-06T22:15:55 CDT" duration-ms="1195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Orders.SumbitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- All Test Suite -->
</testng-results>
